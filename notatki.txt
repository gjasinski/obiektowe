8.11.2016
  -  w javie wszystkie wartości są przekazywane przez referencję(poza typami otokowymy?)
  - używanie dostępu publicznego powinno byc przemyślane, jest odradzane
  - można to zmienic ustawieniem pola jako final
  - ValueObject - nie można zmieniać stanu obiektów(np. liczba 5 nidy nie stanie się inna liczbą)
  - modyfikator private - ogranicza dostęp dla innych klas(dostęp jest tylko z danej klasy)
  - modyfikator protected - dostęp z klas które dziedziczą z tej klasy
  - dostęp pakietowy(pakiety służą do organizacji kodu)
    - dostęp domyślny - wszystkie klasy zdefiniowane danym pakiecie, mają dostęp do pól(jeżeli są publiczne)
  - metody dostępowe:
    - gettery - umożliwiają pobranie danych prywatnych, lepiej tworzyc takie gettery aby wiadomo było co zwracają, np public int getValueInKMH();
    - settery - umożliwiają modyfikację danych prywatnych
  - shadowing
  - modyfikator static


15.11.2016
  - metody:
    - modyfikator final w metodach ma sens dla metod publicznych i prywatynych, zabrania nadpisywania metody
    - modyfikator static - nie ma dostępu do innych pól niż z modyfikatorem static
    - konstruktor prywatny - chcemy uniemożliwić tworzeniec obiektu z poza klasy
    - abstract
    - w intefejsie default od java 8.0 domyślna implementacja interfejsu, nie można deklarować pól
  - jeżeli zachowanie obiektu może byc różne zacząć od kompozycji
